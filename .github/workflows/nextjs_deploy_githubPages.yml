# .github/workflows/nextjs_deploy_githubPages.yml
# Workflow para construir y desplegar Editmu en GitHub Pages
name: Desplegar Editmu en GitHub Pages

on:
  # Ejecutar este workflow cuando haya cambios en la rama principal
  push:
    branches: ["main"]
  # Permite ejecutar este workflow manualmente desde la pestaña de Actions
  workflow_dispatch:

# Establece los permisos del GITHUB_TOKEN para permitir el despliegue en GitHub Pages
permissions:
  contents: read # Permiso de solo lectura para el contenido del repositorio
  pages: write # Permiso para escribir en GitHub Pages
  id-token: write # Permiso para generar y utilizar identificadores de sesión

# Permite solo una ejecución concurrente del despliegue, evitando superposiciones
concurrency:
  group: "pages"
  cancel-in-progress: false # No cancelar despliegues en curso

jobs:
  # Trabajo de construcción
  construir:
    runs-on: ubuntu-latest # Utiliza el sistema operativo Ubuntu más reciente
    steps:
      - name: Descargar código fuente
        uses: actions/checkout@v4 # Clona el repositorio en el entorno de ejecución

      - name: Detectar gestor de paquetes
        id: detectar-gestor-paquetes
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "No se pudo determinar el gestor de paquetes"
            exit 1
          fi

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Versión de Node.js a utilizar
          cache: ${{ steps.detectar-gestor-paquetes.outputs.manager }}

      - name: Configurar GitHub Pages
        uses: actions/configure-pages@v5
        with:
          # Configuración automática para Next.js (ajusta basePath y deshabilita optimización de imágenes en servidor)
          static_site_generator: next

      - name: Restaurar caché de compilación
        uses: actions/cache@v4
        with:
          path: |
            .next/cache  # Carpeta de caché de Next.js
          # Generar un nuevo caché cuando cambien los paquetes o los archivos fuente
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # Si los archivos fuente cambiaron pero los paquetes no, restaurar desde un caché previo
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Instalar dependencias
        run: ${{ steps.detectar-gestor-paquetes.outputs.manager }} ${{ steps.detectar-gestor-paquetes.outputs.command }}

      - name: Crear archivo .env.local
        run: |
          echo "NEXT_PUBLIC_supabase_url=${{ secrets.NEXT_PUBLIC_supabase_url }}" >> .env.local
          echo "NEXT_PUBLIC_supabase_key=${{ secrets.NEXT_PUBLIC_supabase_key }}" >> .env.local
          echo "NEXT_PUBLIC_RENDER=${{ secrets.NEXT_PUBLIC_RENDER }}" >> .env.local

      - name: Construir el proyecto con Next.js
        env:
          NEXT_PUBLIC_supabase_url: ${{ secrets.NEXT_PUBLIC_supabase_url }}
          NEXT_PUBLIC_supabase_key: ${{ secrets.NEXT_PUBLIC_supabase_key }}
          NEXT_PUBLIC_RENDER: ${{ secrets.NEXT_PUBLIC_RENDER }}
        run: ${{ steps.detectar-gestor-paquetes.outputs.runner }} next build

      - name: Subir artefacto de compilación
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out # Directorio donde Next.js genera los archivos estáticos

  # Trabajo de despliegue
  desplegar:
    environment:
      name: github-pages # Entorno de despliegue
      url: ${{ steps.despliegue.outputs.page_url }} # URL del sitio desplegado
    runs-on: ubuntu-latest # Ejecutar en Ubuntu más reciente
    needs: construir # Este trabajo depende de que el trabajo 'construir' termine correctamente
    steps:
      - name: Desplegar en GitHub Pages
        id: despliegue
        uses: actions/deploy-pages@v4